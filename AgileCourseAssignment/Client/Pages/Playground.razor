@page "/playground"
@using AgileCourseAssignment.Shared;
@using AgileCourseAssignment.Client.Services;
@using AgileCourseAssignment.Client.Pages
@using AgileCourseAssignment.Shared.Models
@inject IFlagService flagService;
@inject IFlagService scoreService;
@inject NavigationManager navigation;

@inject IModalService Modal
@using Blazored.Modal


<div class="background-container">

    <div class="sticky-btn-container">
        <button class="sticky-btn" @onclick="() => ToMenu()">
            <img class="back" src="/Images/Buttons/Back.png" />
        </button>
    </div>

    @if (isGameOver == false)
    {
        <div class="information-container">
            <div class="time-container">
                <img src="https://i.gifer.com/XVo6.gif" class="timer-icon" />
                <h2 class="time">Time: @remainingTime seconds</h2>
            </div>
            <div>
                <h3>@currentQuestionNumber of 25</h3>
            </div>
        </div>

        <div class="quest-container">

            <h1>@CurrentQuestion.CountryName</h1>
            <h2>@question</h2>

        </div>
        <h2>@isCorrect</h2>
        <div class="answer-container">
            @foreach (FlagsModel gameList in playListCompleted)
            {
                <div class="question-card">
                    <img class="question-image" src="/Images/Flags/@gameList.Image" />
                    <button class="btn-submit" @onclick="() => CheckAnswer(gameList.Id)">Answer</button>
                </div>
            }
        </div>
    }
    else
    {
        <div class="scoreBoard">
            <h1 class ="Quiz-Completed">Quiz Completed</h1>
            <h2 class ="Points">Points for each correct flag: @flagPoints</h2>
            <h2 class ="Time">Time remaining points: @convertedToTimePonts</h2>
            <h2 class="Summary">Summary of points: @finalResult </h2>

            <div class="answers-text">
                <h1>View Your Answers</h1>
            </div>
            <button class="btn-checkAnswers" @onclick="ShowScoreTableModal">Check Your Answers</button>

            <div class="registration-container">
                <h2 class=""> Do you want to record your score?</h2>
                @if (!isRegistred)
                {
                    <input type="text" class="playername-input" @bind="playerName" placeholder="Type your name...." />
                }
                @if (isRegistred == false)
                {
                    @if (wrongRegisterTypo)
                    {
                        <div class="error-message">
                            <p class="error-message">@errorMessageDisplay</p>
                            <img src="https://media.giphy.com/media/3ov9k0ExnKPTAfbOww/giphy.gif" alt="Error Image" />
                        </div>
                    }
                    @if (nameAlreadyExist)
                    {
                        <div class="error-message">
                            <p class="error-message">Sorry, that name already exists.</p>
                            <img src="https://media.giphy.com/media/3ov9k0ExnKPTAfbOww/giphy.gif" alt="Error Image" />
                        </div>
                    }
                    <button class="registration-button" @onclick="RegisterScoreAsync">Save Your Highscore!</button>
                    <button class="backtomenu-button" @onclick="ToMenu">Back to Menu</button>
                }
                else
                {
                    <div class="success-message">
                        <p class="succes-message">Registration successful!</p>
                        <img src="https://media.giphy.com/media/SXsLOcNhhDCCfHJpcD/giphy.gif" alt="Succes Image" />
                        
                    </div>
                    <button class="backtomenu-button" @onclick="ToMenu">Back to Menu</button>
                }
            </div>
        </div>
    }
</div>

    
@code {
    private void ShowScoreTableModal()
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(CheckYourGameModal.UserAnswers), userAnswers);
        parameters.Add(nameof(CheckYourGameModal.ChosenCountries), chosenCountries);

        Modal.Show<CheckYourGameModal>("", parameters);
    }
}



